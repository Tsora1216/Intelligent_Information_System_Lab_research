# -*- coding: utf-8 -*-
"""【公開用】01章_コピペで簡単実行！キテレツおもしろ自然言語処理_付録コード.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CWklKe8JvfxeDQovkC5JhcF2spQE5yCG
"""



"""ここに掲載されているコードは、  
『コピペで簡単実行！キテレツおもしろ自然言語処理～PythonとColaboratoryで身につく基礎の基礎』書籍の付録です。    
本ファイルの公開用URLや、本ファイル内のコードを、みだりに他の人へ共有しないでください。  

本ファイルは、書籍に記載のコードのコピペの手間を省くために作られました。  
本ファイルの公開用URLにアクセスすると、  
お手元のGoogleアカウントに本ファイルのコピーが作成されます。  
（つまり、コレをご覧になっているということは、コピーをご覧になっています）    
そのコピーは、あなただけのファイルとして生成されるため、    
書籍をお買い求め済みの方は、自由に変更したり実行したり保存したりして問題ありません。   

初期状態では、ご参考までに筆者が実行した出力結果を残してあります。  
ご自身で実行する際には、「編集」⇒「出力を全て消去」により、  
出力結果を消去してから実行なさると良いでしょう。  

※注：Googleの公式が作成したファイルではないため、実行時に  
「警告: このノートブックは Google が作成したものではありません。」  
という警告が出ます。  
気になる方は、ご自身の環境に都度コードをコピーして実行しても良いでしょう。


"""



"""■ はじめましてのコード："""

print("こんにちは世界")

"""■ 四則演算："""

# a と b を自由に書き換えて何度か実行してみよう！
a = 10
b = 3
print("和= "+str(a+b))
print("積= "+str(a*b))

print("商= "+str(a/b))
print("商（整数）= "+str(a//b))
print("余り= "+str(a%b))

"""■ 繰り返しと条件分岐："""

# 繰り返しと条件分岐
# xが0～11まで変化しながら繰り返し
for x in range(0,12):
  if x % 3 == 0:
    print(x)

"""■ フィボナッチ数列の出力："""

# 「関数」を使ってフィボナッチ数列を出力してみよう！
def fib(k):
  if k == 0:
    return 0
  elif k == 1:
    return 1
  else:
    return fib(k-1) + fib(k-2)

for t in range(0,13):
  print(fib(t))

"""■ 愛を出力するコード："""

print('\n'.join([''.join([('Love'[(x-y) % len('Love')] if ((x*0.05)**2+(y*0.1)**2-1)**3-(x*0.05)**2*(y*0.1)**3 <= 0else' ') for x in  range(-30, 30)]) for y in  range(15, -15, -1)]))

"""■ 30回実行するように変更した例："""

for t in range(0,30):
  print(fib(t))

"""■  GoogleDriveのマウントコマンド："""

from google.colab import drive
drive.mount('/content/drive')

"""■  GoogleDriveにテキストを保存するコード："""

output_str = "サンプルテキスト\nファイル保存サンプルです。"
with open("/content/drive/MyDrive/sample.txt", mode="w") as f:
  f.write(output_str)

"""■ 現在のカレントディレクトリのパスを表示："""

!pwd

"""■ カレントディレクトリ内のファイルを表示："""

!ls -l

"""■ 日付情報を表示："""

!date

"""■ Pythonのバージョンを表示："""

!python -V

"""■ Pythonのjanomeモジュールインストール："""

!pip install janome

"""■ Pythonのrequestsモジュールのバージョンを表示："""

!pip show requests

"""■ 掛け算九九表："""

# 掛け算九九表
for x in range(0,9):
  for y in range(0,9):
    print('{0}'.format('%2d ' % ((x+1) * (y+1))), end="")
  print('')

"""■ 正規表現による文字列の置換："""

# 正規表現による文字列の置換
import re
input_str= 'pen pineapple apple pen'
result_str = re.sub(r'p[a-z]n+', 'PPAP', input_str) 
#pen, とpin がPPAP に置換される
print(result_str )

"""■ 現在時刻をN回表示する簡易時計："""

# 時間関連のモジュールを使う準備
import datetime, time

# 現在時刻をN回表示するコード例。「def」で関数定義する
def do_main_function(kurikaesi_kaisuu):
  for count in range(0, kurikaesi_kaisuu):
    print_current_time()
    time.sleep(1)

# 現在時刻をprintする(日本時間ではなくUTC=協定世界時)
def print_current_time():
  print( datetime.datetime.now().strftime('%Y/%m/%d %H:%M:%S') )

# 関数定義（def)は定義のみ。以下で実行する
do_main_function(5)

"""■ 1行のコードで素数を数えて落ち着く："""

print(' '.join([str(item) for item in  filter(lambda x: all(map(lambda p: x % p!= 0, range(2, x))), range(2, 101))]))

